# Stage 1: Build the application
# Usa openjdk con JDK para compilar
FROM openjdk:21-jdk-slim AS builder

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copia los archivos del Gradle Wrapper y los scripts de compilación primero.
# Esto es para aprovechar el cache de Docker: si estos archivos no cambian,
# Docker no necesita reconstruir esta etapa.
COPY gradlew .
COPY gradle/ gradle/
COPY build.gradle.kts .
COPY settings.gradle.kts .

# Asegúrate de que el script del Gradle Wrapper sea ejecutable
RUN chmod +x gradlew

# Copia el código fuente de tu aplicación
# Si 'frontend/' es un proyecto de frontend separado (ej. React, Angular)
# y NO es compilado o servido directamente por tu backend Java,
# ENTONCES ELIMINA LA SIGUIENTE LÍNEA:
COPY src/ src/
# COPY frontend/ frontend/ # Descomenta o elimina según si tu backend lo necesita para compilar

# Compila la aplicación utilizando Gradle.
# El flag '-x test' es opcional y omite la ejecución de los tests durante el build.
# Esto es útil en entornos CI/CD para acelerar el build si los tests se ejecutan en otra etapa.
RUN ./gradlew build -x test

# Stage 2: Create the final lean image for running the application
# Usa openjdk con solo el JRE, que es mucho más ligero que el JDK.
FROM openjdk:21-jre-slim

# Establece el directorio de trabajo para la aplicación final
WORKDIR /app

# Copia el JAR compilado desde la etapa 'builder'.
# Asegúrate de que 'equiplink-1.0-SNAPSHOT.jar' es el nombre exacto de tu JAR en build/libs/.
# Si no estás seguro, puedes verificarlo después de un 'gradlew build' localmente.
# Si solo hay un JAR ejecutable en build/libs, puedes usar 'build/libs/*.jar'
COPY --from=builder /app/build/libs/equiplink-1.0-SNAPSHOT.jar ./app.jar

# Expone el puerto por defecto de tu aplicación.
# Esta es una directiva informativa para Docker. Tu aplicación Java DEBE
# leer la variable de entorno 'PORT' de Render para saber en qué puerto escuchar.
EXPOSE 7000 

# Comando para ejecutar la aplicación cuando el contenedor inicia.
# La aplicación 'app.jar' debe estar configurada para leer el puerto de 'PORT'.
CMD ["java", "-jar", "app.jar"]